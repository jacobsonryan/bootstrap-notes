{"version":3,"sources":["components/NewNote.js","components/NavBar.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["date","name","submit","NavBar","props","toggleDark","darkMode","Navbar","collapseOnSelect","expand","bg","this","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","className","to","href","style","cursor","color","onClick","mode","React","Component","NewNote","state","isEmpty","today","Date","getFullYear","getMonth","getDate","addNote","add","notes","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","body","currentDateTime","length","substring","Form","onSubmit","Group","controlId","Label","Control","required","backgroundColor","onChange","as","rows","Button","border","type","Alert","display","Notes","removeNote","remove","editNote","edit","Jumbotron","Badge","map","note","index","key","Accordion","defaultActiveKey","Card","Header","eventKey","replace","split","pill","Body","contentEditable","onBlur","e","innerHTML","dangerouslySetInnerHTML","__html","App","updated","JSON","parse","localStorage","getItem","push","setItem","stringify","splice","size","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9b4ceb8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nlet date;\nlet name;\nlet submit;\n\nclass NewNote extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n      this.state = {\n        isEmpty: false\n      }\n      let today = new Date()\n      date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\t    this.addNote = props.add\n      this.submit = props.submit\n      this.notes = props.notes\n      this.darkMode = props.darkMode\n      this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    submit = false\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.addNote({\n    \tbody: this.state.body,\n      currentDateTime: date\n    })\n\n    if(this.state.body.length >= 30) {\n      name = this.state.body.substring(0, 30) + \"...\"\n    } else {\n      name = this.state.body\n    }\n    submit = !this.submit\n  }\n\n  render() {\n    return (\n      <div className=\"newNote-container\">\n      \t<h1>Add note</h1>\n      \t\t<Form onSubmit={this.handleSubmit}>\n      \t\t  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n      \t\t    <Form.Label>Body</Form.Label>\n      \t\t    <Form.Control required style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}} className=\"body\" name=\"body\" onChange={this.handleChange} as=\"textarea\" rows=\"8\" />\n      \t\t  </Form.Group>\n      \t\t  <Button style={{backgroundColor: this.darkMode ? 'rgb(23, 23, 23)' : '#007bff', border: this.darkMode ? '1px solid white' : '1px solid #007bff'}} className=\"submit-btn\" variant=\"primary\" type=\"submit\">Submit</Button>\n      \t\t</Form>\n          <Alert style={{display: submit ? 'block' : 'none'}} variant={this.darkMode ? 'dark' : 'success'}><b>{name}</b> has been added. <Link to=\"/notes\">Click here to view.</Link></Alert>\n      </div>\n    );\n  }\n}\n\nexport default NewNote;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.toggleDark = props.toggleDark\n    this.darkMode = props.darkMode\n  }\n\n  render() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg={this.props.bg} variant=\"dark\">\n          <Navbar.Brand>Bootstrap Notes</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\"></Nav>\n            <Nav>\n              <div className=\"links\">\n                <Link to=\"/\">New Note</Link>\n                <Link to=\"/notes\">Notes</Link>\n                <a href=\"#\" style={{cursor: 'pointer', color: 'white'}} onClick={this.toggleDark}>{this.props.mode}</a>\n              </div>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass Notes extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.notes = props.notes\n\t\tthis.removeNote = props.remove\n\t\tthis.addNote = props.add\n\t\tthis.editNote = props.edit\n        this.darkMode = props.darkMode\n\t}\n\n\trender() {\n\t\treturn (\n\t\t  <div style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}}>\n\t\t\t  <Jumbotron style={{display: this.notes.length === 0 ? 'block' : 'none', backgroundColor: this.darkMode ? '#171717' : '#E9ECEF', color: this.darkMode ? 'white' : '#212529'}} className=\"jumbo\">\n\t\t\t\t  <h1>Uh oh!</h1>\n\t\t\t\t  <p>\n\t\t\t\t    Seems like you have no notes! Click the button down below to the <b>new note</b> page\n\t\t\t\t    where you can add your first one.\n\t\t\t\t  </p>\n\t\t\t\t  <p>\n\t\t\t\t  <Link style={{backgroundColor: this.darkMode ? 'rgb(23, 23, 23)' : '#007bff', border: this.darkMode ? '1px solid white' : '1px solid #007bff'}} className=\"new-note-btn\" to=\"/\">New Note</Link>\n\t\t\t\t  </p>\n\t\t\t  </Jumbotron>\n\t\t\t  <div style={{display: this.notes.length === 0 ? 'none' : 'block'}} className=\"notes-container\">\n\t\t\t  \t<div className=\"heading\" style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}}>\n\t\t\t  \t\t<h1>Notes <span className=\"counter\" ><Badge style={{backgroundColor: this.darkMode ? 'rgb(23, 23, 23)' : '#007bff', border: this.darkMode ? '1px solid white' : '1px solid #007bff'}} variant=\"primary\">{this.notes.length}</Badge></span></h1>\n\t  \t\t\t  \t<Link style={{backgroundColor: this.darkMode ? 'rgb(23, 23, 23)' : '#007bff', border: this.darkMode ? '1px solid white' : '1px solid #007bff'}} className=\"new-note-btn2\" to=\"/\">New Note</Link>\n\t  \t\t\t </div>\n\t\t\t  \t{this.notes.map((note, index) => {\n\t\t\t  \t\treturn (\n\t\t\t  \t\t\t<div key={index} className=\"notes\">\n\t\t\t\t\t\t\t<Accordion defaultActiveKey=\"1\">\n\t\t\t\t\t\t\t  <Card>\n\t\t\t\t\t\t\t    <Card.Header style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}}>\n\t\t\t\t\t\t\t      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}}>\n\t\t\t\t\t\t\t\t    <div id='remove'><i onClick={() => this.removeNote(index)} className=\"fa fa-times\"></i></div>\n\t\t\t\t\t\t\t        <div className=\"name\">{note.body.length >= 20 ? note.body.substring(0, 30).replace(/(<([^>]+)>)/gi, \" \").split('<')[0] + \"...\" : note.body.replace(/(<([^>]+)>)/gi, \" \").split('<')[0]}<Badge className=\"pill\" pill variant={this.darkMode ? \"light\" : \"dark\"}>{note.currentDateTime}</Badge></div>\n\t\t\t\t\t\t\t      </Accordion.Toggle>\n\t\t\t\t\t\t\t    </Card.Header>\n\t\t\t\t\t\t\t    <Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t      <Card.Body style={{backgroundColor: this.darkMode ? '#242424' : 'white', color: this.darkMode ? 'white' : '#212529'}} contentEditable=\"true\" onBlur={(e) => this.editNote(index, e.target.innerHTML)} dangerouslySetInnerHTML={{__html: note.body.replace(/\\r?\\n/g, '<br />')}}></Card.Body>\n\t\t\t\t\t\t\t    </Accordion.Collapse>\n\t\t\t\t\t\t\t  </Card>\n\t\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t\t</div>\n\t\t\t  \t\t)\n\t\t\t  \t})}\n\t\t\t  </div>\n\t\t  </div>\n\t\t);\n\t}\n}\n\nexport default Notes;\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport NavBar from './components/NavBar'\nimport NewNote from './components/NewNote'\nimport Notes from './components/Notes'\nimport {MoonIcon, SunIcon} from '@primer/octicons-react'\n\nclass App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        notes: [],\n        submit: false,\n        darkMode: false,\n        updated: false\n      };\n\n      this.addNote = this.addNote.bind(this);\n      this.removeNote = this.removeNote.bind(this);\n      this.editNote = this.editNote.bind(this);\n      this.toggleDark = this.toggleDark.bind(this);\n  }\n\n  componentDidMount() {\n      this.setState({ notes: JSON.parse(localStorage.getItem('notes')) || [] });\n  }\n\n  addNote(note) {\n    let notes = this.state.notes\n    notes.push(note)\n    this.setState({ notes })\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }\n\n  removeNote(index) {\n    let notes = this.state.notes\n    notes.splice(index, 1)\n    this.setState({ notes })\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }\n\n  editNote(index, note) {\n    let notes = this.state.notes\n    notes[index].body = note\n    this.setState({ notes, updated: true })\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }\n\n  toggleDark() {\n    let darkMode = this.state.darkMode\n    this.setState({darkMode: !darkMode})\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{backgroundColor: this.state.darkMode ? '#242424' : 'white', color: this.state.darkMode ? 'white' : '#212529'}}>\n        <NavBar bg={this.state.darkMode ? 'dark' : 'primary'} darkMode={this.state.darkMode} toggleDark={this.toggleDark} mode={this.state.darkMode ? <SunIcon size={24} /> : <MoonIcon size={24} />}/>\n        <main style={{backgroundColor: this.state.darkMode ? '#242424' : 'white'}}>\n            <Switch>\n              <Route path=\"/\" component={ () => <NewNote darkMode={this.state.darkMode} notes={this.state.notes} submit={this.state.submit} add={this.addNote} /> } exact />\n              <Route path=\"/notes\" component={ () => <Notes darkMode={this.state.darkMode} edit={this.editNote} remove={this.removeNote} notes={this.state.notes} /> } />\n            </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}